import 'dart:io';
import 'dart:math';
import 'dart:ui';
import 'package:dynamic_height_grid_view/dynamic_height_grid_view.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_easyloading/flutter_easyloading.dart';
import 'package:get/get.dart';
import 'package:image_picker/image_picker.dart';
import 'package:intl/intl.dart';
import 'package:responsive_sizer/responsive_sizer.dart';
import 'package:sme/app/user/dayworks/dayworks_logic.dart';
import 'package:sme/app/user/general/category/category_labour_logic.dart';
import 'package:sme/app/user/general/category/category_labour_model.dart';
import 'package:sme/app/user/general/category/category_list_logic.dart';
import 'package:sme/app/user/general/category/category_logic.dart';
import 'package:sme/app/user/general/user/get_user_logic.dart';
import 'package:sme/app/user/general/category/purchase_custom_model.dart';
import 'package:sme/app/user/general/sites/SiteController.dart';
import 'package:sme/app/user/general/sites/SiteDataModel.dart';
import 'package:sme/app/user/storecollection/store_collection_logic.dart';
import 'package:sme/utils/appmusic.dart';
import 'package:sme/utils/appstring.dart';
import 'package:sme/utils/appdatabase.dart';
import 'package:sme/utils/appcolor.dart';
import 'package:sme/utils/appfonts.dart';
import 'package:sme/utils/appimages.dart';
import 'package:sme/utils/apputils.dart';
import 'package:sme/utils/appwidgets.dart';

class AddDayWorks extends StatefulWidget {
  const AddDayWorks({super.key, this.id, this.isEdit});

  final String? id;
  final bool? isEdit;

  @override
  State<AddDayWorks> createState() => _AddDayWorksState();
}

class _AddDayWorksState extends State<AddDayWorks> {
  SiteController siteController = Get.put(SiteController());
  StoreCollectionController storeReturnController = Get.put(StoreCollectionController());
  AllUserController getAllUserController = AllUserController();
  DayWorkController dayWorkController = Get.put(DayWorkController());
  CategoryController categoryController = Get.put(CategoryController());
  CategoryListController deliveryController = Get.put(CategoryListController());
  LabourSheetController dayWorkTimesheetController = Get.put(LabourSheetController());

  void _selectDate(BuildContext context) async {
    final DateTime initialDate = dayWorkController.selectedDate;
    dayWorkController.selectedDate = dayWorkController.selectedDate;
    dayWorkController.selectedDate2.value = DateFormat('dd MMM yyyy').format(dayWorkController.selectedDate);
    final DateTime? picked = await showDatePicker(
      context: context,
      initialDate: initialDate,
      firstDate: DateTime(2015, 8),
      lastDate: DateTime(2101),
    );
    if (picked != null && picked != dayWorkController.selectedDate) {
      setState(() {
        dayWorkController.selectedDate = picked;
        dayWorkController.selectedDate2.value = DateFormat('dd MMM yyyy').format(picked);
      });
    }
  }

  @override
  initState() {
    super.initState();
    getAllUserController.getAllUser();
    categoryController.getDeliveryData();
    dayWorkController.weekHoursAndName.clear();
    storeReturnController.getInventory();
    dayWorkController.weekHoursAndName.clear();
    dayWorkController.plantProduct.clear();
    dayWorkController.materialProduct.clear();
    dayWorkController.selectedImages.clear();
    init();
  }

  void init() async {
    if (widget.isEdit == true) {
      EasyLoading.show();
      await dayWorkController.getSingleDayWork(id: widget.id ?? "");
      getAllUserController.selectUser.value = dayWorkController.dayWorkTimeSheet.first.dwData?.createdBy ?? '';
      getAllUserController.selectId.value = dayWorkController.dayWorkTimeSheet.first.dwData?.createdId ?? '';
      dayWorkController.descController.text = dayWorkController.dayWorkTimeSheet.first.dwData?.dayworkDescription ?? '';
      dayWorkController.selectedProject.value = dayWorkController.dayWorkTimeSheet.first.dwData?.projectName ?? '';
      dayWorkController.address.value = dayWorkController.dayWorkTimeSheet.first.dwData?.siteAddress ?? '';
      dayWorkController.siteAddress.value = dayWorkController.dayWorkTimeSheet.first.dwData?.jobId ?? '';
      dayWorkController.extraInfoController.text = dayWorkController.dayWorkTimeSheet.first.dwData?.exteraInfo ?? '';
      dayWorkController.selectedDate = dayWorkController.dayWorkTimeSheet.first.dwData?.createdAt ?? DateTime.now();
      dayWorkController.selectedDate2.value = DateFormat('dd MMM yyyy').format(dayWorkController.selectedDate);
      dayWorkController.weekHoursAndName.clear();
      dayWorkController.plantProduct.clear();
      dayWorkController.materialProduct.clear();
      dayWorkController.selectedImages.clear();
      for (int i = 0; i < dayWorkController.dayWorkTimeSheet.first.dwLabourData!.length; i++) {
        if (dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].userId != "0") {
          dayWorkController.weekHoursAndName.add(LabourHoursModel(
            id: dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].userId ?? '',
            name: dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].labour ?? '',
            sat: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].sat ?? '0.0'),
            sun: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].sun ?? '0.0'),
            mon: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].mon ?? '0.0'),
            tue: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].tue ?? '0.0'),
            wed: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].wed ?? '0.0'),
            thu: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].thu ?? '0.0'),
            fri: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].fri ?? '0.0'),
            total: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].totalHours ?? '0.0'),
          ));
        } else {
          dayWorkController.weekHoursAndName.add(LabourHoursModel(
            id: dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].userId ?? '',
            other: dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].otherLabour ?? '',
            name: dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].otherLabour ?? '',
            sat: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].sat ?? '0.0'),
            sun: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].sun ?? '0.0'),
            mon: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].mon ?? '0.0'),
            tue: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].tue ?? '0.0'),
            wed: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].wed ?? '0.0'),
            thu: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].thu ?? '0.0'),
            fri: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].fri ?? '0.0'),
            total: double.parse(dayWorkController.dayWorkTimeSheet.first.dwLabourData![i].totalHours ?? '0.0'),
          ));
        }
        dayWorkController.isLabour.value = true;
      }

      for (int i = 0; i < dayWorkController.dayWorkTimeSheet.first.dwPlantData!.length; i++) {
        dayWorkController.plantProduct.add(PurchaseProductModel(
          itemID: dayWorkController.dayWorkTimeSheet.first.dwPlantData![i].plantId ?? '',
          emsCode: dayWorkController.dayWorkTimeSheet.first.dwPlantData![i].emsCode ?? '',
          qty: dayWorkController.dayWorkTimeSheet.first.dwPlantData![i].plantQty ?? '',
          itemPrice: dayWorkController.dayWorkTimeSheet.first.dwPlantData![i].plantPrice ?? '',
          itemName: dayWorkController.dayWorkTimeSheet.first.dwPlantData![i].category ?? '',
          items: dayWorkController.dayWorkTimeSheet.first.dwPlantData![i].category ?? '',
          itemTotalPrice: dayWorkController.dayWorkTimeSheet.first.dwPlantData![i].totalPrice.toString(),
        ));
        deliveryController.isVisible.value = true;
      }

      for (int i = 0; i < dayWorkController.dayWorkTimeSheet.first.dwMaterialData!.length; i++) {
        String qty = (double.tryParse(dayWorkController.dayWorkTimeSheet.first.dwMaterialData![i].itemUnit ?? '0.0')?.toInt() ?? 0).toString();
        dayWorkController.materialProduct.add(PurchaseProductModel(
          itemID: dayWorkController.dayWorkTimeSheet.first.dwMaterialData![i].materialId ?? '',
          emsCode: '',
          qty: qty,
          itemPrice: dayWorkController.dayWorkTimeSheet.first.dwMaterialData![i].price ?? '',
          itemName: dayWorkController.dayWorkTimeSheet.first.dwMaterialData![i].itemName ?? '',
          items: dayWorkController.dayWorkTimeSheet.first.dwMaterialData![i].itemName ?? '',
          itemTotalPrice: dayWorkController.dayWorkTimeSheet.first.dwMaterialData![i].totalPrice.toString(),
        ));
        deliveryController.isVisible2.value = true;
      }

      for (int i = 0; i < dayWorkController.dayWorkTimeSheet.first.dwAttachmentData!.length; i++) {
        String attachmentUrl = dayWorkController.dayWorkTimeSheet.first.dwAttachmentData![i].attachment ?? '';
        String filePath = await AppUtils.downloadAndStoreImage(attachmentUrl);
        XFile xFile = XFile(filePath);
        dayWorkController.selectedImages.add(xFile);
        setState(() {});
      }
      deliveryController.calculateTotals(dayWorkController.plantProduct, dayWorkController.materialProduct, dayWorkController.accessProduct);
      dayWorkController.listChange.value = Random().nextInt(999999);
      EasyLoading.dismiss();
    } else {
      user();
      dayWorkController.selectedDate2.value = "--";
      dayWorkController.selectedDate = DateTime.now();
      dayWorkController.selectedProject.value = "--";
      dayWorkController.address.value = "--";
      dayWorkController.descController.text = "";
      dayWorkController.extraInfoController.text = "";
      dayWorkController.weekHoursAndName.clear();
      dayWorkController.plantProduct.clear();
      dayWorkController.materialProduct.clear();
      dayWorkController.selectedImages.clear();
      dayWorkController.isLabour.value = false;
      dayWorkController.listChange.value = Random().nextInt(999999);
    }
  }

  void user() async {
    getAllUserController.selectUser.value = await HiveDB.getData(AppStrings.UNAME);
    getAllUserController.selectId.value = await HiveDB.getData(AppStrings.UID);
  }

  void showSiteModal(BuildContext context) {
    TextEditingController searchController = TextEditingController();
    List<SiteDataModel> filteredSites = siteController.sitesList;

    showModalBottomSheet(
      context: context,
      isScrollControlled: true,
      builder: (BuildContext context) {
        return StatefulBuilder(
          builder: (BuildContext context, StateSetter setState) {
            return Container(
              height: Get.height * 0.8,
              color: Colors.white,
              child: Column(
                children: [
                  // Search field at the top
                  Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: TextField(
                      controller: searchController,
                      decoration: const InputDecoration(
                        labelText: 'Search site',
                        prefixIcon: Icon(Icons.search),
                        border: OutlineInputBorder(),
                      ),
                      onChanged: (value) {
                        setState(() {
                          filteredSites = siteController.sitesList.where((site) => site.jobNo!.toLowerCase().contains(value.toLowerCase()) || site.projectName!.toLowerCase().contains(value.toLowerCase())).toList();
                        });
                      },
                    ),
                  ),
                  Expanded(
                    child: ListView.builder(
                      itemCount: filteredSites.length,
                      itemBuilder: (context, index) {
                        var site = filteredSites[index];
                        return ListTile(
                          title: Text('${site.jobNo} - ${site.projectName}', style: AppFonts.black14),
                          onTap: () {
                            setState(() {
                              dayWorkController.siteAddress.value = site.jobId!;
                              dayWorkController.category.value = site.jobId!;
                              dayWorkController.address.value = site.fullAddress!;
                              dayWorkController.change.value = Random().nextInt(999999);
                              dayWorkController.selectedProject.value = '${site.jobNo} - ${site.projectName}';
                            });
                            Navigator.of(context).pop();
                          },
                        );
                      },
                    ),
                  ),
                ],
              ),
            );
          },
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return InkWell(
      onTap: () => FocusScope.of(context).unfocus(),
      child: Scaffold(
        body: Obx(() {
          return Stack(
            children: [
              AppWidgets.background(),
              Column(
                children: [
                  AppWidgets.commonAppBar(
                    title: widget.isEdit == true ? 'Edit Day Work' : 'Add Day Work',
                    centerTitle: true,
                  ),
                  Expanded(
                    child: ListView(
                      padding: EdgeInsets.zero,
                      children: [
                        //Select Date
                        Obx(() {
                          return AppWidgets.commonUISvg(
                            title: "Select Date",
                            value: dayWorkController.selectedDate2.value,
                            onTap: () => _selectDate(context),
                            asset: AppImages.calender,
                            isIconShow: true,
                          );
                        }),
                        //Select User
                        Obx(() {
                          return AppWidgets.commonUI(
                            title: "Select User",
                            value: getAllUserController.selectUser.value,
                            onTap: () {
                              showModalBottomSheet(
                                context: context,
                                isScrollControlled: true,
                                builder: (BuildContext context) {
                                  getAllUserController.userDelivery?.result?.sort((a, b) {
                                    return a.name?.toLowerCase().compareTo(b.name?.toLowerCase() ?? "") ?? 0;
                                  });
                                  return Container(
                                    height: Get.height * 0.9,
                                    color: Colors.white,
                                    child: Column(
                                      children: [
                                        Padding(
                                          padding: const EdgeInsets.all(8.0),
                                          child: TextField(
                                            controller: dayWorkController.textController,
                                            decoration: InputDecoration(
                                              hintText: 'Type or select a user',
                                              suffixIcon: IconButton(
                                                icon: const Icon(Icons.clear),
                                                onPressed: () {
                                                  dayWorkController.textController.clear();
                                                },
                                              ),
                                            ),
                                            onChanged: (value) {
                                              getAllUserController.selectUser.value = value;
                                              getAllUserController.selectId.value = '';
                                            },
                                          ),
                                        ),
                                        Expanded(
                                          child: ListView.builder(
                                            itemCount: getAllUserController.userDelivery?.result?.length,
                                            itemBuilder: (context, index) {
                                              return ListTile(
                                                title: Text(
                                                  '${getAllUserController.userDelivery?.result?[index].name}',
                                                  style: AppFonts.black14,
                                                ),
                                                onTap: () {
                                                  getAllUserController.selectUser.value = getAllUserController.userDelivery?.result?[index].name ?? "";
                                                  getAllUserController.selectId.value = getAllUserController.userDelivery?.result?[index].userId.toString() ?? "";
                                                  dayWorkController.textController.text = getAllUserController.selectUser.value;
                                                  debugPrint('Selected User: ${getAllUserController.selectUser.value}');
                                                  debugPrint('Selected User ID: ${getAllUserController.selectId.value}');
                                                  Navigator.of(context).pop();
                                                },
                                              );
                                            },
                                          ),
                                        ),
                                      ],
                                    ),
                                  );
                                },
                              );
                            },
                            icon: Icons.arrow_drop_down_outlined,
                            isIconShow: true,
                          );
                        }),
                        //Select Project/Site
                        Obx(() {
                          return AppWidgets.commonUI(
                            title: 'Select Project/Site',
                            value: dayWorkController.selectedProject.value,
                            onTap: () {
                              showSiteModal(context);
                            },
                            icon: Icons.arrow_drop_down_outlined,
                            isIconShow: true,
                          );
                        }),
                        //Site Address
                        Obx(() {
                          return AppWidgets.commonUI(title: 'Site Address', value: dayWorkController.address.value, backgroundColor: AppColors.lightBlue.withValues(alpha: 0.3));
                        }),
                        //Description
                        AppWidgets.commonUI(
                          title: 'Work Description',
                          widget: Container(
                            decoration: const BoxDecoration(
                              color: AppColors.lightBlue,
                            ),
                            child: AppWidgets.quoteFieldsC(maxLine: 5, textEditingController: dayWorkController.descController),
                          ),
                          isShowWidget: true,
                        ),
                        //A labour
                        Padding(
                          padding: const EdgeInsets.symmetric(horizontal: 8.0),
                          child: InkWell(
                            onTap: () {
                              dayWorkTimesheetController.saturday.value = 0.0;
                              dayWorkTimesheetController.sunday.value = 0.0;
                              dayWorkTimesheetController.monday.value = 0.0;
                              dayWorkTimesheetController.tuesday.value = 0.0;
                              dayWorkTimesheetController.wednesday.value = 0.0;
                              dayWorkTimesheetController.thursday.value = 0.0;
                              dayWorkTimesheetController.friday.value = 0.0;
                              dayWorkTimesheetController.totals.value = 0.0;
                              dayWorkController.userNames.value = 'Select User';

                              showDialog(
                                context: context,
                                builder: (context) {
                                  return BackdropFilter(
                                    filter: ImageFilter.blur(sigmaX: 5, sigmaY: 5),
                                    child: Dialog(
                                      insetPadding: const EdgeInsets.all(20),
                                      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(0)),
                                      backgroundColor: Colors.white,
                                      child: SingleChildScrollView(
                                        child: SizedBox(
                                          child: Column(
                                            children: [
                                              Container(
                                                height: Get.height * 0.05,
                                                width: Get.width,
                                                decoration: const BoxDecoration(
                                                  color: AppColors.lightBlue,
                                                  borderRadius: BorderRadius.only(
                                                    topLeft: Radius.circular(0),
                                                    topRight: Radius.circular(0),
                                                  ),
                                                ),
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  children: [
                                                    Padding(
                                                      padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                                      child: Text(
                                                        "ADD TIMESHEET HOUR",
                                                        style: AppFonts.white18.copyWith(
                                                          fontWeight: FontWeight.bold,
                                                          letterSpacing: 0,
                                                        ),
                                                        textAlign: TextAlign.center,
                                                      ),
                                                    ),
                                                    Container(
                                                      height: Get.height * 0.05,
                                                      width: Get.width * 0.10,
                                                      decoration: const BoxDecoration(
                                                        color: AppColors.red,
                                                      ),
                                                      child: IconButton(
                                                        onPressed: () {
                                                          Navigator.of(context).pop();
                                                        },
                                                        icon: const Icon(
                                                          Icons.close,
                                                          color: AppColors.white,
                                                          size: 20,
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              const SizedBox(height: 10),
                                              Padding(
                                                padding: const EdgeInsets.symmetric(horizontal: 8),
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  children: [
                                                    const Text(
                                                      "Name:",
                                                      style: TextStyle(fontSize: 18, color: AppColors.lightBlue, fontWeight: FontWeight.bold),
                                                    ),
                                                    InkWell(
                                                      onTap: () {
                                                        showModalBottomSheet(
                                                          context: context,
                                                          isScrollControlled: true,
                                                          builder: (BuildContext context) {
                                                            return Container(
                                                              height: Get.height * 0.9,
                                                              color: Colors.white,
                                                              child: Column(
                                                                children: [
                                                                  Padding(
                                                                    padding: const EdgeInsets.all(8.0),
                                                                    child: TextField(
                                                                      controller: dayWorkController.textController2,
                                                                      decoration: InputDecoration(
                                                                        hintText: 'Type or select a user',
                                                                        suffixIcon: IconButton(
                                                                          icon: const Icon(Icons.clear),
                                                                          onPressed: () {
                                                                            dayWorkController.textController2.clear();
                                                                          },
                                                                        ),
                                                                      ),
                                                                      onChanged: (value) {
                                                                        dayWorkController.userNames.value = value;
                                                                        dayWorkController.customUsername.value = value;
                                                                        dayWorkController.userIds.value = '0';
                                                                      },
                                                                    ),
                                                                  ),
                                                                  Expanded(
                                                                    child: ListView.builder(
                                                                      itemCount: getAllUserController.userDelivery?.result?.length,
                                                                      itemBuilder: (context, index) {
                                                                        return ListTile(
                                                                          title: Text(
                                                                            '${getAllUserController.userDelivery?.result?[index].name}',
                                                                            style: AppFonts.black14,
                                                                          ),
                                                                          onTap: () {
                                                                            dayWorkController.userNames.value = getAllUserController.userDelivery?.result?[index].name ?? "";
                                                                            dayWorkController.userIds.value = getAllUserController.userDelivery?.result?[index].userId.toString() ?? "";
                                                                            dayWorkController.textController2.text = dayWorkController.userNames.value;
                                                                            debugPrint('Selected User: ${dayWorkController.userNames.value}');
                                                                            debugPrint('Selected User ID: ${dayWorkController.userIds.value}');
                                                                            Navigator.of(context).pop();
                                                                          },
                                                                        );
                                                                      },
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            );
                                                          },
                                                        );
                                                      },
                                                      child: Container(
                                                        height: 30,
                                                        width: 150,
                                                        decoration: BoxDecoration(
                                                          borderRadius: BorderRadius.circular(4),
                                                          color: AppColors.lightBlue,
                                                        ),
                                                        child: Padding(
                                                          padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            children: [
                                                              Obx(() {
                                                                return Text(
                                                                  dayWorkController.userNames.value,
                                                                  style: const TextStyle(color: AppColors.white, fontWeight: FontWeight.bold),
                                                                  textAlign: TextAlign.center,
                                                                );
                                                              }),
                                                              const Icon(
                                                                Icons.arrow_drop_down,
                                                                color: AppColors.white,
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      ),
                                                    )
                                                  ],
                                                ),
                                              ),
                                              const SizedBox(height: 10),
                                              Obx(() {
                                                return AppWidgets.dayWorkTimeSheet(
                                                  dayName: "Saturday",
                                                  dayHours: dayWorkTimesheetController.saturday.value.toString(),
                                                  onPressedIncrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.saturday,
                                                      true,
                                                    );
                                                  },
                                                  onPressedDecrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.saturday,
                                                      false,
                                                    );
                                                  },
                                                );
                                              }),
                                              Obx(() {
                                                return AppWidgets.dayWorkTimeSheet(
                                                  dayName: "Sunday",
                                                  dayHours: dayWorkTimesheetController.sunday.value.toString(),
                                                  onPressedIncrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.sunday,
                                                      true,
                                                    );
                                                  },
                                                  onPressedDecrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.sunday,
                                                      false,
                                                    );
                                                  },
                                                );
                                              }),
                                              Obx(() {
                                                return AppWidgets.dayWorkTimeSheet(
                                                  dayName: "Monday",
                                                  dayHours: dayWorkTimesheetController.monday.value.toString(),
                                                  onPressedIncrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.monday,
                                                      true,
                                                    );
                                                  },
                                                  onPressedDecrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.monday,
                                                      false,
                                                    );
                                                  },
                                                );
                                              }),
                                              Obx(() {
                                                return AppWidgets.dayWorkTimeSheet(
                                                  dayName: "Tuesday",
                                                  dayHours: dayWorkTimesheetController.tuesday.value.toString(),
                                                  onPressedIncrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.tuesday,
                                                      true,
                                                    );
                                                  },
                                                  onPressedDecrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.tuesday,
                                                      false,
                                                    );
                                                  },
                                                );
                                              }),
                                              Obx(() {
                                                return AppWidgets.dayWorkTimeSheet(
                                                  dayName: "Wednesday",
                                                  dayHours: dayWorkTimesheetController.wednesday.value.toString(),
                                                  onPressedIncrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.wednesday,
                                                      true,
                                                    );
                                                  },
                                                  onPressedDecrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.wednesday,
                                                      false,
                                                    );
                                                  },
                                                );
                                              }),
                                              Obx(() {
                                                return AppWidgets.dayWorkTimeSheet(
                                                  dayName: "Thursday",
                                                  dayHours: dayWorkTimesheetController.thursday.value.toString(),
                                                  onPressedIncrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.thursday,
                                                      true,
                                                    );
                                                  },
                                                  onPressedDecrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.thursday,
                                                      false,
                                                    );
                                                  },
                                                );
                                              }),
                                              Obx(() {
                                                return AppWidgets.dayWorkTimeSheet(
                                                  dayName: "Friday",
                                                  dayHours: dayWorkTimesheetController.friday.value.toString(),
                                                  onPressedIncrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.friday,
                                                      true,
                                                    );
                                                  },
                                                  onPressedDecrease: () {
                                                    dayWorkTimesheetController.updateControllerText(
                                                      dayWorkTimesheetController.friday,
                                                      false,
                                                    );
                                                  },
                                                );
                                              }),
                                              Padding(
                                                padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  children: [
                                                    Text("TOTAL", style: AppFonts.lightBlueColor18.copyWith(fontWeight: FontWeight.bold)),
                                                    Obx(() {
                                                      return Text(dayWorkTimesheetController.totals.toString(), style: AppFonts.lightBlueColor18.copyWith(fontWeight: FontWeight.bold));
                                                    }),
                                                  ],
                                                ),
                                              ),
                                              Row(
                                                children: [
                                                  Expanded(
                                                    child: Padding(
                                                      padding: const EdgeInsets.symmetric(horizontal: 10.0, vertical: 10),
                                                      child: SizedBox(
                                                        height: Get.height * 0.05,
                                                        width: Get.width,
                                                        child: ElevatedButton(
                                                          style: ElevatedButton.styleFrom(
                                                            backgroundColor: AppColors.green,
                                                            shape: RoundedRectangleBorder(
                                                              borderRadius: BorderRadius.circular(10),
                                                            ),
                                                          ),
                                                          onPressed: () {
                                                            if (dayWorkController.userNames.value == 'Select User' || dayWorkController.userNames.value == '') {
                                                              AppWidgets.toast(msg: 'Please select user', backgroundColor: AppColors.red);
                                                            } else {
                                                              dayWorkController.weekHoursAndName.add(
                                                                LabourHoursModel(
                                                                  id: dayWorkController.userIds.value,
                                                                  other: dayWorkController.customUsername.value,
                                                                  name: dayWorkController.userNames.value,
                                                                  sat: dayWorkTimesheetController.saturday.value,
                                                                  sun: dayWorkTimesheetController.sunday.value,
                                                                  mon: dayWorkTimesheetController.monday.value,
                                                                  tue: dayWorkTimesheetController.tuesday.value,
                                                                  wed: dayWorkTimesheetController.wednesday.value,
                                                                  thu: dayWorkTimesheetController.thursday.value,
                                                                  fri: dayWorkTimesheetController.friday.value,
                                                                  total: dayWorkTimesheetController.totals.value,
                                                                ),
                                                              );
                                                              Navigator.of(context).pop();
                                                              dayWorkController.isLabour.value = true;
                                                            }
                                                          },
                                                          child: Text(
                                                            "ADD",
                                                            style: AppFonts.white14,
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ],
                                          ),
                                        ),
                                      ),
                                    ),
                                  );
                                },
                              );
                            },
                            child: Container(
                              width: Get.width,
                              color: AppColors.lightBlue,
                              child: Padding(
                                padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 10),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                  children: [
                                    Text(
                                      "A: Labour",
                                      style: AppFonts.white18.copyWith(
                                        letterSpacing: 0,
                                      ),
                                    ),
                                    Row(
                                      children: [
                                        Text(
                                          "ADD",
                                          style: AppFonts.white18,
                                        ),
                                        const SizedBox(
                                          width: 5,
                                        ),
                                        const Icon(
                                          Icons.add,
                                          color: AppColors.white,
                                        )
                                      ],
                                    )
                                  ],
                                ),
                              ),
                            ),
                          ),
                        ),
                        const SizedBox(
                          height: 10,
                        ),
                        Obx(() {
                          return Visibility(
                              visible: dayWorkController.isLabour.value,
                              child: ListView.builder(
                                physics: const NeverScrollableScrollPhysics(),
                                padding: EdgeInsets.zero,
                                shrinkWrap: true,
                                itemCount: dayWorkController.weekHoursAndName.length,
                                itemBuilder: (context, index) {
                                  return Padding(
                                    padding: const EdgeInsets.all(8.0),
                                    child: InkWell(
                                      onTap: () {
                                        dayWorkTimesheetController.saturday.value = dayWorkController.weekHoursAndName[index].sat;
                                        dayWorkTimesheetController.sunday.value = dayWorkController.weekHoursAndName[index].sun;
                                        dayWorkTimesheetController.monday.value = dayWorkController.weekHoursAndName[index].mon;
                                        dayWorkTimesheetController.tuesday.value = dayWorkController.weekHoursAndName[index].tue;
                                        dayWorkTimesheetController.wednesday.value = dayWorkController.weekHoursAndName[index].wed;
                                        dayWorkTimesheetController.thursday.value = dayWorkController.weekHoursAndName[index].thu;
                                        dayWorkTimesheetController.friday.value = dayWorkController.weekHoursAndName[index].fri;
                                        dayWorkTimesheetController.totals.value = dayWorkController.weekHoursAndName[index].total;
                                        dayWorkController.userNames.value = dayWorkController.weekHoursAndName[index].name;
                                        dayWorkController.userIds.value = dayWorkController.weekHoursAndName[index].id;

                                        showDialog(
                                          context: context,
                                          builder: (context) {
                                            return BackdropFilter(
                                              filter: ImageFilter.blur(sigmaX: 5, sigmaY: 5),
                                              child: Dialog(
                                                insetPadding: const EdgeInsets.all(20),
                                                shape: RoundedRectangleBorder(
                                                  borderRadius: BorderRadius.circular(0),
                                                ),
                                                backgroundColor: Colors.white,
                                                child: SingleChildScrollView(
                                                  child: Column(
                                                    children: [
                                                      Container(
                                                        height: Get.height * 0.05,
                                                        width: Get.width,
                                                        decoration: const BoxDecoration(
                                                          color: AppColors.lightBlue,
                                                          borderRadius: BorderRadius.only(
                                                            topLeft: Radius.circular(0),
                                                            topRight: Radius.circular(0),
                                                          ),
                                                        ),
                                                        child: Row(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          children: [
                                                            Padding(
                                                              padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                                              child: Text(
                                                                "EDIT TIMESHEET HOUR",
                                                                style: AppFonts.white18.copyWith(
                                                                  fontWeight: FontWeight.bold,
                                                                  letterSpacing: 0,
                                                                ),
                                                                textAlign: TextAlign.center,
                                                              ),
                                                            ),
                                                            Container(
                                                              height: Get.height * 0.05,
                                                              width: Get.width * 0.10,
                                                              decoration: const BoxDecoration(
                                                                color: AppColors.red,
                                                              ),
                                                              child: IconButton(
                                                                onPressed: () {
                                                                  Navigator.of(context).pop();
                                                                },
                                                                icon: const Icon(
                                                                  Icons.close,
                                                                  color: AppColors.white,
                                                                  size: 20,
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                      const SizedBox(height: 10),
                                                      Padding(
                                                        padding: const EdgeInsets.symmetric(horizontal: 8),
                                                        child: Row(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          children: [
                                                            const Text(
                                                              "Name:",
                                                              style: TextStyle(fontSize: 18, color: AppColors.lightBlue, fontWeight: FontWeight.bold),
                                                            ),
                                                            InkWell(
                                                              onTap: () {
                                                                showModalBottomSheet(
                                                                  context: context,
                                                                  isScrollControlled: true,
                                                                  builder: (BuildContext context) {
                                                                    return Container(
                                                                      height: Get.height * 0.9,
                                                                      color: Colors.white,
                                                                      child: Column(
                                                                        children: [
                                                                          Padding(
                                                                            padding: const EdgeInsets.all(8.0),
                                                                            child: TextField(
                                                                              controller: dayWorkController.textController2,
                                                                              decoration: InputDecoration(
                                                                                hintText: 'Type or select a user',
                                                                                suffixIcon: IconButton(
                                                                                  icon: const Icon(Icons.clear),
                                                                                  onPressed: () {
                                                                                    dayWorkController.textController2.clear();
                                                                                  },
                                                                                ),
                                                                              ),
                                                                              onChanged: (value) {
                                                                                dayWorkController.userNames.value = value;
                                                                                dayWorkController.customUsername.value = value;
                                                                                dayWorkController.userIds.value = '0';
                                                                              },
                                                                            ),
                                                                          ),
                                                                          Expanded(
                                                                            child: ListView.builder(
                                                                              itemCount: getAllUserController.userDelivery?.result?.length,
                                                                              itemBuilder: (context, index) {
                                                                                return ListTile(
                                                                                  title: Text(
                                                                                    '${getAllUserController.userDelivery?.result?[index].name}',
                                                                                    style: AppFonts.black14,
                                                                                  ),
                                                                                  onTap: () {
                                                                                    dayWorkController.userNames.value = getAllUserController.userDelivery?.result?[index].name ?? "";
                                                                                    dayWorkController.userIds.value = getAllUserController.userDelivery?.result?[index].userId.toString() ?? "";
                                                                                    dayWorkController.textController2.text = dayWorkController.userNames.value;
                                                                                    Navigator.of(context).pop();
                                                                                  },
                                                                                );
                                                                              },
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    );
                                                                  },
                                                                );
                                                              },
                                                              child: Container(
                                                                height: 30,
                                                                width: 150,
                                                                decoration: BoxDecoration(
                                                                  borderRadius: BorderRadius.circular(4),
                                                                  color: AppColors.lightBlue,
                                                                ),
                                                                child: Padding(
                                                                  padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    children: [
                                                                      Obx(() {
                                                                        return Text(
                                                                          dayWorkController.userNames.value,
                                                                          style: const TextStyle(color: AppColors.white, fontWeight: FontWeight.bold),
                                                                          textAlign: TextAlign.center,
                                                                        );
                                                                      }),
                                                                      const Icon(
                                                                        Icons.arrow_drop_down,
                                                                        color: AppColors.white,
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                            )
                                                          ],
                                                        ),
                                                      ),
                                                      const SizedBox(height: 10),
                                                      Obx(() {
                                                        return AppWidgets.dayWorkTimeSheet(
                                                          dayName: "Saturday",
                                                          dayHours: dayWorkTimesheetController.saturday.value.toString(),
                                                          onPressedIncrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.saturday,
                                                              true,
                                                            );
                                                          },
                                                          onPressedDecrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.saturday,
                                                              false,
                                                            );
                                                          },
                                                        );
                                                      }),
                                                      Obx(() {
                                                        return AppWidgets.dayWorkTimeSheet(
                                                          dayName: "Sunday",
                                                          dayHours: dayWorkTimesheetController.sunday.value.toString(),
                                                          onPressedIncrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.sunday,
                                                              true,
                                                            );
                                                          },
                                                          onPressedDecrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.sunday,
                                                              false,
                                                            );
                                                          },
                                                        );
                                                      }),
                                                      Obx(() {
                                                        return AppWidgets.dayWorkTimeSheet(
                                                          dayName: "Monday",
                                                          dayHours: dayWorkTimesheetController.monday.value.toString(),
                                                          onPressedIncrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.monday,
                                                              true,
                                                            );
                                                          },
                                                          onPressedDecrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.monday,
                                                              false,
                                                            );
                                                          },
                                                        );
                                                      }),
                                                      Obx(() {
                                                        return AppWidgets.dayWorkTimeSheet(
                                                          dayName: "Tuesday",
                                                          dayHours: dayWorkTimesheetController.tuesday.value.toString(),
                                                          onPressedIncrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.tuesday,
                                                              true,
                                                            );
                                                          },
                                                          onPressedDecrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.tuesday,
                                                              false,
                                                            );
                                                          },
                                                        );
                                                      }),
                                                      Obx(() {
                                                        return AppWidgets.dayWorkTimeSheet(
                                                          dayName: "Wednesday",
                                                          dayHours: dayWorkTimesheetController.wednesday.value.toString(),
                                                          onPressedIncrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.wednesday,
                                                              true,
                                                            );
                                                          },
                                                          onPressedDecrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.wednesday,
                                                              false,
                                                            );
                                                          },
                                                        );
                                                      }),
                                                      Obx(() {
                                                        return AppWidgets.dayWorkTimeSheet(
                                                          dayName: "Thursday",
                                                          dayHours: dayWorkTimesheetController.thursday.value.toString(),
                                                          onPressedIncrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.thursday,
                                                              true,
                                                            );
                                                          },
                                                          onPressedDecrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.thursday,
                                                              false,
                                                            );
                                                          },
                                                        );
                                                      }),
                                                      Obx(() {
                                                        return AppWidgets.dayWorkTimeSheet(
                                                          dayName: "Friday",
                                                          dayHours: dayWorkTimesheetController.friday.value.toString(),
                                                          onPressedIncrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.friday,
                                                              true,
                                                            );
                                                          },
                                                          onPressedDecrease: () {
                                                            dayWorkTimesheetController.updateControllerText(
                                                              dayWorkTimesheetController.friday,
                                                              false,
                                                            );
                                                          },
                                                        );
                                                      }),
                                                      Padding(
                                                        padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                                        child: Row(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          children: [
                                                            Text("TOTAL", style: AppFonts.lightBlueColor18.copyWith(fontWeight: FontWeight.bold)),
                                                            Obx(() {
                                                              return Text(dayWorkTimesheetController.totals.toString(), style: AppFonts.lightBlueColor18.copyWith(fontWeight: FontWeight.bold));
                                                            }),
                                                          ],
                                                        ),
                                                      ),
                                                      Row(
                                                        children: [
                                                          Expanded(
                                                            child: Padding(
                                                              padding: const EdgeInsets.only(top: 10),
                                                              child: SizedBox(
                                                                height: Get.height * 0.05,
                                                                width: Get.width,
                                                                child: ElevatedButton(
                                                                  style: ElevatedButton.styleFrom(
                                                                    backgroundColor: AppColors.red,
                                                                    shape: RoundedRectangleBorder(
                                                                      borderRadius: BorderRadius.circular(0),
                                                                    ),
                                                                  ),
                                                                  onPressed: () {
                                                                    dayWorkController.weekHoursAndName.removeAt(index);
                                                                    Navigator.of(context).pop();
                                                                    dayWorkController.isLabour.value = true;
                                                                  },
                                                                  child: Text(
                                                                    "Remove",
                                                                    style: AppFonts.white14,
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                          Expanded(
                                                            child: Padding(
                                                              padding: const EdgeInsets.only(top: 10),
                                                              child: SizedBox(
                                                                height: Get.height * 0.05,
                                                                width: Get.width,
                                                                child: ElevatedButton(
                                                                  style: ElevatedButton.styleFrom(
                                                                    backgroundColor: AppColors.green,
                                                                    shape: RoundedRectangleBorder(
                                                                      borderRadius: BorderRadius.circular(0),
                                                                    ),
                                                                  ),
                                                                  onPressed: () {
                                                                    dayWorkController.weekHoursAndName[index] = LabourHoursModel(
                                                                      id: dayWorkController.userIds.value,
                                                                      other: dayWorkController.customUsername.value,
                                                                      name: dayWorkController.userNames.value,
                                                                      sat: dayWorkTimesheetController.saturday.value,
                                                                      sun: dayWorkTimesheetController.sunday.value,
                                                                      mon: dayWorkTimesheetController.monday.value,
                                                                      tue: dayWorkTimesheetController.tuesday.value,
                                                                      wed: dayWorkTimesheetController.wednesday.value,
                                                                      thu: dayWorkTimesheetController.thursday.value,
                                                                      fri: dayWorkTimesheetController.friday.value,
                                                                      total: dayWorkTimesheetController.totals.value,
                                                                    );
                                                                    Navigator.of(context).pop();
                                                                    dayWorkController.isLabour.value = true;
                                                                  },
                                                                  child: Text(
                                                                    "ADD",
                                                                    style: AppFonts.white14,
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                        ],
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                              ),
                                            );
                                          },
                                        );
                                      },
                                      child: Container(
                                        width: Get.width,
                                        decoration: const BoxDecoration(
                                          color: AppColors.white,
                                        ),
                                        child: Column(
                                          children: [
                                            Padding(
                                              padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 4),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                children: [
                                                  Text(
                                                    dayWorkController.weekHoursAndName[index].name,
                                                    style: AppFonts.lightBlueColor18,
                                                  ),
                                                  Text(
                                                    "Total: ${dayWorkController.weekHoursAndName[index].total}",
                                                    style: AppFonts.lightBlueColor18,
                                                  ),
                                                ],
                                              ),
                                            ),
                                            SingleChildScrollView(
                                              padding: EdgeInsets.zero,
                                              scrollDirection: Axis.horizontal,
                                              child: Row(
                                                children: [
                                                  AppWidgets.dayWorkData(
                                                    dayName: "Sat",
                                                    dayHours: dayWorkController.weekHoursAndName[index].sat.toString(),
                                                  ),
                                                  AppWidgets.dayWorkData(
                                                    dayName: "Sun",
                                                    dayHours: dayWorkController.weekHoursAndName[index].sun.toString(),
                                                  ),
                                                  AppWidgets.dayWorkData(
                                                    dayName: "Mon",
                                                    dayHours: dayWorkController.weekHoursAndName[index].mon.toString(),
                                                  ),
                                                  AppWidgets.dayWorkData(
                                                    dayName: "Tue",
                                                    dayHours: dayWorkController.weekHoursAndName[index].tue.toString(),
                                                  ),
                                                  AppWidgets.dayWorkData(
                                                    dayName: "Wed",
                                                    dayHours: dayWorkController.weekHoursAndName[index].wed.toString(),
                                                  ),
                                                  AppWidgets.dayWorkData(
                                                    dayName: "Thu",
                                                    dayHours: dayWorkController.weekHoursAndName[index].thu.toString(),
                                                  ),
                                                  AppWidgets.dayWorkData(
                                                    dayName: "Fri",
                                                    dayHours: dayWorkController.weekHoursAndName[index].fri.toString(),
                                                  ),
                                                ],
                                              ),
                                            )
                                          ],
                                        ),
                                      ),
                                    ),
                                  );
                                },
                              ));
                        }),
                        //B add plant
                        Padding(
                          padding: const EdgeInsets.symmetric(horizontal: 8.0),
                          child: InkWell(
                            onTap: () {
                              dayWorkController.rootCatShow.value = true;
                              dayWorkController.subCatShow.value = false;
                              dayWorkController.productShow.value = false;
                              dayWorkController.showSearchProduct.value = false;

                              dayWorkController.rootCatName = '';
                              dayWorkController.subCatName = '';
                              dayWorkController.selectIndex.value = -1;
                              dayWorkController.subCategoryList.clear();
                              dayWorkController.listChange.value = Random().nextInt(9999999);
                              deliveryController.totalPrice.value = 0.0;
                              deliveryController.counter.value = 0;
                              deliveryController.unitPrice.value = 0.0;
                              deliveryController.unitPriceController.text = '0.0';

                              FocusScope.of(context).unfocus();

                              dayWorkController.searchFieldController.clear();
                              dayWorkController.searchProductValue.value = '';

                              showDialog(
                                context: context,
                                builder: (context) {
                                  return ValueListenableBuilder(
                                    valueListenable: dayWorkController.listChange,
                                    builder: (context, value, child) {
                                      return BackdropFilter(
                                        filter: ImageFilter.blur(sigmaX: 5, sigmaY: 5),
                                        child: Dialog(
                                          insetPadding: const EdgeInsets.all(20),
                                          child: SizedBox(
                                            child: Obx(
                                              () {
                                                return Column(
                                                  children: [
                                                    Container(
                                                      padding: const EdgeInsets.symmetric(vertical: 5),
                                                      decoration: const BoxDecoration(
                                                        color: AppColors.lightBlue,
                                                      ),
                                                      child: AppBar(
                                                        backgroundColor: AppColors.lightBlue,
                                                        centerTitle: true,
                                                        leading: IconButton(
                                                          onPressed: () {
                                                            dayWorkController.rootCatShow.value = true;
                                                            dayWorkController.subCatShow.value = false;
                                                            dayWorkController.productShow.value = false;
                                                            dayWorkController.rootCatName = '';
                                                            dayWorkController.subCatName = '';
                                                            dayWorkController.selectIndex.value = -1;
                                                            dayWorkController.subCategoryList.clear();
                                                            dayWorkController.listChange.value = Random().nextInt(9999999);
                                                            deliveryController.totalPrice.value = 0.0;
                                                            deliveryController.counter.value = 0;
                                                            deliveryController.unitPrice.value = 0.0;
                                                            deliveryController.unitPriceController.clear();
                                                            FocusScope.of(context).unfocus();
                                                            dayWorkController.searchFieldController.clear();
                                                            dayWorkController.searchProductValue.value = '';
                                                            Get.back();
                                                          },
                                                          icon: const Icon(
                                                            Icons.arrow_back_ios,
                                                            color: AppColors.white,
                                                          ),
                                                        ),
                                                        title: AppWidgets.snText(
                                                          text: "Tools",
                                                          style: AppFonts.white16.copyWith(fontSize: 16.sp, fontWeight: FontWeight.bold),
                                                        ),
                                                      ),
                                                    ),
                                                    Container(
                                                      margin: const EdgeInsets.symmetric(horizontal: 10, vertical: 5),
                                                      decoration: BoxDecoration(
                                                        color: AppColors.darkBlue.withValues(alpha: 0.6),
                                                      ),
                                                      child: AppWidgets.searchTextFeild(
                                                        onChanged: (value) {
                                                          dayWorkController.searchProductValue.value = value;
                                                        },
                                                        onTap: () {
                                                          dayWorkController.showSearchProduct.value = true;
                                                          dayWorkController.rootCatShow.value = false;
                                                          dayWorkController.subCatShow.value = false;
                                                          dayWorkController.productShow.value = false;
                                                          dayWorkController.rootCatName = '';
                                                          dayWorkController.subCatName = '';
                                                          dayWorkController.selectIndex.value = -1;
                                                          dayWorkController.subCategoryList.clear();
                                                          dayWorkController.listChange.value = Random().nextInt(9999999);
                                                        },
                                                        controller: dayWorkController.searchFieldController,
                                                        suffixIcon: Visibility(
                                                          visible: dayWorkController.showSearchProduct.value,
                                                          child: Padding(
                                                            padding: const EdgeInsets.all(8.0),
                                                            child: CircleAvatar(
                                                              backgroundColor: AppColors.red,
                                                              child: IconButton(
                                                                onPressed: () {
                                                                  dayWorkController.searchProductValue.value = '';
                                                                  dayWorkController.searchFieldController.clear();
                                                                  dayWorkController.rootCatShow.value = true;
                                                                  dayWorkController.subCatShow.value = false;
                                                                  dayWorkController.productShow.value = false;
                                                                  dayWorkController.showSearchProduct.value = false;
                                                                  dayWorkController.rootCatName = '';
                                                                  dayWorkController.subCatName = '';
                                                                  dayWorkController.selectIndex.value = -1;
                                                                  dayWorkController.subCategoryList.clear();
                                                                  FocusScope.of(context).unfocus();
                                                                  dayWorkController.listChange.value = Random().nextInt(9999999);
                                                                },
                                                                icon: const Icon(Icons.close, color: AppColors.white),
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                    if (dayWorkController.rootCatName.isNotEmpty)
                                                      Padding(
                                                        padding: const EdgeInsets.symmetric(
                                                          vertical: 5.0,
                                                          horizontal: 20,
                                                        ),
                                                        child: SingleChildScrollView(
                                                          scrollDirection: Axis.horizontal,
                                                          child: SizedBox(
                                                            width: Get.width,
                                                            child: Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                InkWell(
                                                                  onTap: () {
                                                                    dayWorkController.rootCatShow.value = true;
                                                                    dayWorkController.subCatShow.value = false;
                                                                    dayWorkController.productShow.value = false;
                                                                    dayWorkController.rootCatName = '';
                                                                    dayWorkController.subCatName = '';
                                                                    dayWorkController.subCategoryList.clear();
                                                                    FocusScope.of(context).unfocus();
                                                                    dayWorkController.searchFieldController.clear();
                                                                    dayWorkController.searchProductValue.value = '';
                                                                    dayWorkController.listChange.value = Random().nextInt(9999999);
                                                                  },
                                                                  child: AppWidgets.customText(
                                                                    text: dayWorkController.rootCatName,
                                                                    style: AppFonts.lightBlueColor16.copyWith(fontSize: 14),
                                                                  ),
                                                                ),
                                                                const Padding(
                                                                  padding: EdgeInsets.symmetric(horizontal: 3.0),
                                                                  child: Icon(
                                                                    Icons.arrow_forward_ios,
                                                                    size: 18,
                                                                    color: AppColors.lightBlue,
                                                                  ),
                                                                ),
                                                                if (dayWorkController.subCatName.isNotEmpty)
                                                                  InkWell(
                                                                    onTap: () {
                                                                      dayWorkController.rootCatShow.value = false;
                                                                      dayWorkController.subCatShow.value = true;
                                                                      dayWorkController.productShow.value = false;
                                                                      dayWorkController.subCatName = '';
                                                                      dayWorkController.productList.clear();
                                                                      FocusScope.of(context).unfocus();
                                                                      dayWorkController.searchFieldController.clear();
                                                                      dayWorkController.searchProductValue.value = '';
                                                                      dayWorkController.listChange.value = Random().nextInt(9999999);
                                                                    },
                                                                    child: AppWidgets.customText(
                                                                      text: dayWorkController.subCatName,
                                                                      style: AppFonts.lightBlueColor16.copyWith(fontSize: 14),
                                                                    ),
                                                                  ),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    if (dayWorkController.rootCatShow.value)
                                                      Expanded(
                                                        child: Padding(
                                                          padding: const EdgeInsets.all(8.0),
                                                          child: ValueListenableBuilder(
                                                            valueListenable: dayWorkController.searchProductValue,
                                                            builder: (context, String value, child) {
                                                              return DynamicHeightGridView(
                                                                crossAxisCount: 3,
                                                                crossAxisSpacing: 5,
                                                                mainAxisSpacing: 5,
                                                                itemCount: storeReturnController.selectedDelivery?.data?.plants?.rootCategories?.where((category) => value.isEmpty || (category.categoryName?.toLowerCase().contains(value.toLowerCase()) ?? false)).length ?? 0,
                                                                builder: (context, index) {
                                                                  var filteredCategories = storeReturnController.selectedDelivery?.data?.plants?.rootCategories?.where((category) => value.isEmpty || (category.categoryName?.toLowerCase().contains(value.toLowerCase()) ?? false)).toList();
                                                                  var category = filteredCategories?[index];
                                                                  return AppWidgets.gridView(
                                                                    onTap: () {
                                                                      debugPrint('Selected Category: ${category?.categoryName}');
                                                                      FocusScope.of(context).unfocus();
                                                                      dayWorkController.searchFieldController.clear();
                                                                      dayWorkController.searchProductValue.value = '';
                                                                      dayWorkController.rootCatName = '${category?.categoryName}';
                                                                      dayWorkController.rootCatShow.value = false;
                                                                      dayWorkController.subCatShow.value = true;
                                                                      dayWorkController.productShow.value = false;
                                                                      dayWorkController.listChange.value = Random().nextInt(9999999);

                                                                      var selectedRootId = category?.categoryId;
                                                                      dayWorkController.mSubProductList.clear();
                                                                      for (var product in storeReturnController.selectedDelivery?.data?.plants?.subCategories ?? []) {
                                                                        if (product.parentId == selectedRootId) {
                                                                          dayWorkController.mSubProductList.add(product);
                                                                        }
                                                                      }
                                                                    },
                                                                    color: AppColors.lightBlue,
                                                                    title: '${category?.categoryName}',
                                                                  );
                                                                },
                                                              );
                                                            },
                                                          ),
                                                        ),
                                                      ),
                                                    if (dayWorkController.subCatShow.value)
                                                      Expanded(
                                                        child: Padding(
                                                          padding: const EdgeInsets.all(8.0),
                                                          child: ValueListenableBuilder(
                                                            valueListenable: dayWorkController.searchProductValue,
                                                            builder: (context, String value, child) {
                                                              return DynamicHeightGridView(
                                                                crossAxisCount: 3,
                                                                crossAxisSpacing: 5,
                                                                mainAxisSpacing: 5,
                                                                itemCount: dayWorkController.mSubProductList.where((element) => value.isEmpty || element.categoryName!.toLowerCase().contains(value.toLowerCase())).length,
                                                                builder: (context, index) {
                                                                  var filteredCategories = dayWorkController.mSubProductList.where((element) => value.isEmpty || element.categoryName!.toLowerCase().contains(value.toLowerCase())).toList();
                                                                  var category = filteredCategories[index];
                                                                  return AppWidgets.gridView(
                                                                    onTap: () {
                                                                      dayWorkController.subCatName = '${category.categoryName}';
                                                                      dayWorkController.subCatShow.value = false;
                                                                      dayWorkController.productShow.value = true;
                                                                      FocusScope.of(context).unfocus();
                                                                      dayWorkController.searchFieldController.clear();
                                                                      dayWorkController.searchProductValue.value = '';
                                                                      dayWorkController.listChange.value = Random().nextInt(9999999);
                                                                      var selectedRootId = category.categoryId;
                                                                      dayWorkController.mProductList.clear();
                                                                      for (var product in storeReturnController.selectedDelivery?.data?.plants?.products ?? []) {
                                                                        if (product.categoryId == selectedRootId) {
                                                                          dayWorkController.mProductList.add(product);
                                                                        }
                                                                      }
                                                                    },
                                                                    color: AppColors.lightBlue,
                                                                    title: '${category.categoryName}',
                                                                  );
                                                                },
                                                              );
                                                            },
                                                          ),
                                                        ),
                                                      ),
                                                    if (dayWorkController.productShow.value)
                                                      Expanded(
                                                        child: Padding(
                                                          padding: const EdgeInsets.all(8.0),
                                                          child: ValueListenableBuilder(
                                                            valueListenable: dayWorkController.searchProductValue,
                                                            builder: (context, String value, child) {
                                                              return DynamicHeightGridView(
                                                                crossAxisCount: 3,
                                                                crossAxisSpacing: 5,
                                                                mainAxisSpacing: 5,
                                                                itemCount: dayWorkController.mProductList.where((element) => value.isEmpty || element.emsCode!.toLowerCase().contains(value.toLowerCase())).length,
                                                                builder: (context, index) {
                                                                  var filteredCategories = dayWorkController.mProductList.where((element) => value.isEmpty || element.emsCode!.toLowerCase().contains(value.toLowerCase())).toList();
                                                                  var category = filteredCategories[index];
                                                                  return Obx(
                                                                    () {
                                                                      return AppWidgets.gridView(
                                                                        onTap: () {
                                                                          dayWorkController.selectIndex.value = index;
                                                                          dayWorkController.plantName.value = '${category.emsCode}';
                                                                        },
                                                                        color: dayWorkController.selectIndex.value == index ? AppColors.green : AppColors.lightBlue,
                                                                        title: "${category.emsCode}",
                                                                      );
                                                                    },
                                                                  );
                                                                },
                                                              );
                                                            },
                                                          ),
                                                        ),
                                                      ),
                                                    if (dayWorkController.showSearchProduct.value)
                                                      Builder(
                                                        builder: (context) {
                                                          dayWorkController.mProductList.clear();
                                                          for (var product in storeReturnController.selectedDelivery?.data?.plants?.products ?? []) {
                                                            dayWorkController.mProductList.add(product);
                                                          }
                                                          return Expanded(
                                                            child: Padding(
                                                              padding: const EdgeInsets.all(8.0),
                                                              child: ValueListenableBuilder(
                                                                valueListenable: dayWorkController.searchProductValue,
                                                                builder: (context, String value, child) {
                                                                  var filteredCategories = dayWorkController.mProductList.where((element) => value.isEmpty || element.emsCode!.toLowerCase().contains(value.toLowerCase())).toList();
                                                                  if (filteredCategories.isEmpty) {
                                                                    return const Center(
                                                                      child: Text('No data found'),
                                                                    );
                                                                  }
                                                                  return DynamicHeightGridView(
                                                                    crossAxisCount: 3,
                                                                    crossAxisSpacing: 5,
                                                                    mainAxisSpacing: 5,
                                                                    itemCount: filteredCategories.length,
                                                                    builder: (context, index) {
                                                                      var category = filteredCategories[index];
                                                                      return Obx(() {
                                                                        return AppWidgets.gridView(
                                                                          onTap: () {
                                                                            dayWorkController.selectIndex.value = index;
                                                                            dayWorkController.plantName.value = '${category.emsCode}';
                                                                          },
                                                                          color: dayWorkController.selectIndex.value == index ? AppColors.green : AppColors.lightBlue,
                                                                          title: "${category.emsCode}",
                                                                        );
                                                                      });
                                                                    },
                                                                  );
                                                                },
                                                              ),
                                                            ),
                                                          );
                                                        },
                                                      ),
                                                    Obx(() {
                                                      return AppWidgets.incDec(
                                                        onDec: () {
                                                          deliveryController.decrement();
                                                        },
                                                        onInc: () {
                                                          deliveryController.increment();
                                                        },
                                                        value: "${deliveryController.counter.value}",
                                                      );
                                                    }),
                                                    AppWidgets.unitDis(
                                                      ctr: deliveryController.unitPriceController,
                                                      onSubmitted1: (value) {
                                                        deliveryController.unitPriceController.text = value;
                                                        deliveryController.calculatePrices();
                                                      },
                                                    ),
                                                    Obx(
                                                      () => Text(
                                                        'Total Price: ${deliveryController.totalPrice.value.toStringAsFixed(2)}',
                                                        style: const TextStyle(fontSize: 20),
                                                      ),
                                                    ),
                                                    AppWidgets.addRemoveButton(
                                                      removeText: 'Cancel',
                                                      onAdd: () {
                                                        int selectedIndex = dayWorkController.selectIndex.value;
                                                        if (selectedIndex >= 0 && selectedIndex < dayWorkController.mProductList.length) {
                                                          var selectedProduct = dayWorkController.mProductList[selectedIndex];
                                                          if (dayWorkController.plantProduct.any((element) => element.productId == selectedProduct.id)) {
                                                            AppWidgets.toast(msg: 'Product already added', backgroundColor: AppColors.red);
                                                            return;
                                                          } else {
                                                            dayWorkController.plantProduct.add(PurchaseProductModel(
                                                              qty: deliveryController.counter.value.toString(),
                                                              items: dayWorkController.plantName.value,
                                                              itemID: selectedProduct.id!,
                                                              itemPrice: deliveryController.unitPriceController.text == '' ? '0.0' : deliveryController.unitPriceController.text,
                                                              itemTotalPrice: deliveryController.totalPrice.value.toString() == '' ? '0.0' : deliveryController.totalPrice.value.toString(),
                                                              productId: selectedProduct.id!,
                                                              rootName: dayWorkController.rootCatName,
                                                            ));
                                                          }
                                                        } else {
                                                          AppWidgets.toast(msg: "Invalid product selection", backgroundColor: AppColors.red);
                                                        }
                                                        deliveryController.calculateTotals(dayWorkController.plantProduct, dayWorkController.materialProduct, dayWorkController.accessProduct);
                                                        dayWorkController.rootCatShow.value = true;
                                                        dayWorkController.subCatShow.value = false;
                                                        dayWorkController.productShow.value = false;
                                                        dayWorkController.rootCatName = '';
                                                        dayWorkController.subCatName = '';
                                                        dayWorkController.selectIndex.value = -1;
                                                        dayWorkController.subCategoryList.clear();
                                                        dayWorkController.listChange.value = Random().nextInt(9999999);
                                                        deliveryController.counter.value = 0;
                                                        deliveryController.unitPriceController.text = '0.0';
                                                        deliveryController.isVisible.value = true;
                                                        dayWorkController.listChange.value = Random().nextInt(9999999);
                                                        Get.back();
                                                      },
                                                      onRemove: () {
                                                        dayWorkController.rootCatShow.value = true;
                                                        dayWorkController.subCatShow.value = false;
                                                        dayWorkController.productShow.value = false;
                                                        dayWorkController.rootCatName = '';
                                                        dayWorkController.subCatName = '';
                                                        dayWorkController.selectIndex.value = -1;
                                                        dayWorkController.subCategoryList.clear();
                                                        dayWorkController.listChange.value = Random().nextInt(9999999);
                                                        deliveryController.totalPrice.value = 0.0;
                                                        deliveryController.counter.value = 0;
                                                        deliveryController.unitPrice.value = 0.0;
                                                        deliveryController.unitPriceController.text = '0.0';
                                                        Get.back();
                                                      },
                                                    ),
                                                  ],
                                                );
                                              },
                                            ),
                                          ),
                                        ),
                                      );
                                    },
                                  );
                                },
                              );
                            },
                            child: Container(
                              width: Get.width,
                              decoration: const BoxDecoration(
                                color: AppColors.lightBlue,
                              ),
                              padding: const EdgeInsets.all(10),
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                children: [
                                  Text("B : ADD TOOLS", style: AppFonts.white16),
                                  Row(
                                    children: [
                                      Text("ADD", style: AppFonts.white18),
                                      const SizedBox(width: 5),
                                      const Icon(Icons.add, color: AppColors.white),
                                    ],
                                  )
                                ],
                              ),
                            ),
                          ),
                        ),
                        ValueListenableBuilder(
                          valueListenable: dayWorkController.listChange,
                          builder: (context, value, child) {
                            return Visibility(
                              visible: deliveryController.isVisible.value,
                              child: ListView.builder(
                                physics: const NeverScrollableScrollPhysics(),
                                shrinkWrap: true,
                                padding: EdgeInsets.zero,
                                itemCount: dayWorkController.plantProduct.length,
                                itemBuilder: (context, index) {
                                  return Padding(
                                    padding: const EdgeInsets.all(8.0),
                                    child: GestureDetector(
                                      onTap: () {
                                        deliveryController.counter.value = int.parse(dayWorkController.plantProduct[index].qty);
                                        deliveryController.unitPrice.value = double.parse(dayWorkController.plantProduct[index].itemPrice);
                                        deliveryController.totalPrice.value = deliveryController.unitPrice.value * deliveryController.counter.value;
                                        deliveryController.unitPriceController.text = deliveryController.unitPrice.value.toString();
                                        showDialog(
                                          context: context,
                                          builder: (context) {
                                            return AlertDialog(
                                              shape: RoundedRectangleBorder(
                                                borderRadius: BorderRadius.circular(0),
                                              ),
                                              title: const Center(
                                                child: Text("Update Quantity", style: TextStyle(color: AppColors.lightBlue, fontSize: 20)),
                                              ),
                                              content: Obx(() {
                                                return Column(
                                                  mainAxisSize: MainAxisSize.min,
                                                  children: [
                                                    AppWidgets.incDec(
                                                      onDec: () {
                                                        deliveryController.decrement();
                                                        deliveryController.calculatePrices();
                                                      },
                                                      onInc: () {
                                                        deliveryController.increment();
                                                        deliveryController.calculatePrices();
                                                      },
                                                      value: "${deliveryController.counter.value}",
                                                    ),
                                                    const SizedBox(height: 10),
                                                    TextFormField(
                                                      controller: deliveryController.unitPriceController,
                                                      keyboardType: const TextInputType.numberWithOptions(decimal: true),
                                                      decoration: const InputDecoration(
                                                        labelText: 'Unit Price',
                                                        border: OutlineInputBorder(),
                                                      ),
                                                      onChanged: (value) {
                                                        // Trigger calculations whenever the input changes
                                                        deliveryController.calculatePrices();
                                                      },
                                                      onEditingComplete: () {
                                                        // Check if the input is empty or contains only non-numeric characters
                                                        if (deliveryController.unitPriceController.text.isEmpty || double.tryParse(deliveryController.unitPriceController.text) == null) {
                                                          // If empty or invalid, set the text to '0.0'
                                                          deliveryController.unitPriceController.text = '0.0';
                                                          deliveryController.calculatePrices(); // Recalculate after setting to 0.0
                                                        }
                                                      },
                                                      inputFormatters: [
                                                        FilteringTextInputFormatter.allow(RegExp(r'^\d*\.?\d*')),
                                                      ],
                                                    ),
                                                    const SizedBox(height: 10),
                                                    Text(
                                                      'Total Price: ${deliveryController.totalPrice.value.toStringAsFixed(2)}',
                                                      style: const TextStyle(fontSize: 16),
                                                    ),
                                                  ],
                                                );
                                              }),
                                              actions: [
                                                AppWidgets.addRemoveButton(
                                                  onAdd: () {
                                                    // Ensure the text is set to '0.0' if empty
                                                    if (deliveryController.unitPriceController.text.isEmpty || double.tryParse(deliveryController.unitPriceController.text) == null) {
                                                      deliveryController.unitPriceController.text = '0.0';
                                                    }
                                                    setState(() {
                                                      dayWorkController.plantProduct[index] = PurchaseProductModel(
                                                        items: dayWorkController.plantProduct[index].items,
                                                        qty: deliveryController.counter.value.toString(),
                                                        itemID: dayWorkController.plantProduct[index].itemID,
                                                        itemPrice: deliveryController.unitPriceController.text,
                                                        itemTotalPrice: deliveryController.totalPrice.value.toString(),
                                                        productId: dayWorkController.plantProduct[index].productId,
                                                        rootName: dayWorkController.plantProduct[index].rootName,
                                                      );
                                                      deliveryController.counter.value = 0;
                                                      deliveryController.calculateTotals(dayWorkController.plantProduct, dayWorkController.materialProduct, dayWorkController.accessProduct);
                                                      deliveryController.unitPriceController.text = '0.0';
                                                      Navigator.pop(context);
                                                    });
                                                  },
                                                  onRemove: () {
                                                    setState(() {
                                                      dayWorkController.plantProduct.removeAt(index);
                                                      deliveryController.calculateTotals(dayWorkController.plantProduct, dayWorkController.materialProduct, dayWorkController.accessProduct);
                                                      Navigator.pop(context);
                                                    });
                                                  },
                                                ),
                                              ],
                                            );
                                          },
                                        );
                                      },
                                      child: Container(
                                        width: Get.width,
                                        decoration: const BoxDecoration(
                                          color: AppColors.white,
                                        ),
                                        child: ListTile(
                                          contentPadding: const EdgeInsets.symmetric(horizontal: 3),
                                          leading: Container(
                                            height: Get.height * 0.055,
                                            width: Get.width * 0.09,
                                            decoration: BoxDecoration(
                                              color: AppColors.lightBlue,
                                              border: Border.all(color: AppColors.lightBlue),
                                            ),
                                            child: Column(
                                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                                              children: [
                                                Text(
                                                  "Qty",
                                                  style: AppFonts.white18,
                                                ),
                                                Text(
                                                  dayWorkController.plantProduct[index].qty,
                                                  style: AppFonts.white16.copyWith(letterSpacing: 0),
                                                ),
                                              ],
                                            ),
                                          ),
                                          title: Column(
                                            crossAxisAlignment: CrossAxisAlignment.start,
                                            children: [
                                              Text(
                                                dayWorkController.plantProduct[index].items,
                                                style: AppFonts.lightBlueColor12.copyWith(fontWeight: FontWeight.bold),
                                              ),
                                              Padding(
                                                padding: const EdgeInsets.only(right: 8.0),
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  children: [
                                                    Text(
                                                      "Unit Price: ${dayWorkController.plantProduct[index].itemPrice}",
                                                      style: AppFonts.black12,
                                                    ),
                                                    Text(
                                                      "Total Price: ${dayWorkController.plantProduct[index].itemTotalPrice}",
                                                      style: AppFonts.black12,
                                                    ),
                                                  ],
                                                ),
                                              ),
                                            ],
                                          ),
                                        ),
                                      ),
                                    ),
                                  );
                                },
                              ),
                            );
                          },
                        ),
                        //C add material
                        Padding(
                          padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 8),
                          child: InkWell(
                            onTap: () {
                              dayWorkController.rootCatShow.value = true;
                              dayWorkController.subCatShow.value = false;
                              dayWorkController.productShow.value = false;
                              dayWorkController.showSearchProduct.value = false;

                              dayWorkController.rootCatName = '';
                              dayWorkController.subCatName = '';
                              dayWorkController.selectIndex.value = -1;
                              dayWorkController.subCategoryList.clear();
                              dayWorkController.listChange.value = Random().nextInt(9999999);
                              deliveryController.totalPrice.value = 0.0;
                              deliveryController.counter.value = 0;
                              deliveryController.unitPrice.value = 0.0;
                              deliveryController.unitPriceController.text = '0.0';

                              FocusScope.of(context).unfocus();
                              dayWorkController.searchFieldController.clear();
                              dayWorkController.searchProductValue.value = '';
                              showDialog(
                                context: context,
                                builder: (context) {
                                  return ValueListenableBuilder(
                                    valueListenable: dayWorkController.listChange,
                                    builder: (context, value, child) {
                                      return BackdropFilter(
                                        filter: ImageFilter.blur(sigmaX: 5, sigmaY: 5),
                                        child: Dialog(
                                          insetPadding: const EdgeInsets.all(20),
                                          shape: RoundedRectangleBorder(
                                            borderRadius: BorderRadius.circular(0),
                                          ),
                                          child: GestureDetector(
                                            onTap: () {
                                              deliveryController.calculatePrices();
                                            },
                                            child: SizedBox(
                                              height: Get.height * 1,
                                              width: Get.width,
                                              child: Obx(() {
                                                return Column(
                                                  children: [
                                                    Container(
                                                      decoration: const BoxDecoration(
                                                        color: AppColors.lightBlue,
                                                      ),
                                                      child: AppBar(
                                                        backgroundColor: AppColors.lightBlue,
                                                        centerTitle: true,
                                                        leading: IconButton(
                                                          onPressed: () {
                                                            dayWorkController.rootCatShow.value = true;
                                                            dayWorkController.subCatShow.value = false;
                                                            dayWorkController.productShow.value = false;
                                                            dayWorkController.rootCatName = '';
                                                            dayWorkController.subCatName = '';
                                                            dayWorkController.subCategoryList.clear();
                                                            dayWorkController.listChange.value = Random().nextInt(9999999);
                                                            deliveryController.totalPrice.value = 0.0;
                                                            deliveryController.counter.value = 0;
                                                            deliveryController.unitPrice.value = 0.0;
                                                            FocusScope.of(context).unfocus();
                                                            dayWorkController.searchFieldController.clear();
                                                            dayWorkController.searchProductValue.value = '';
                                                            deliveryController.unitPriceController.clear();
                                                            Get.back();
                                                          },
                                                          icon: const Icon(
                                                            Icons.arrow_back_ios,
                                                            color: AppColors.white,
                                                          ),
                                                        ),
                                                        title: AppWidgets.snText(
                                                          text: "Materials",
                                                          style: AppFonts.white16.copyWith(fontSize: 16.sp, fontWeight: FontWeight.bold),
                                                        ),
                                                      ),
                                                    ),
                                                    Container(
                                                      margin: const EdgeInsets.symmetric(horizontal: 10, vertical: 5),
                                                      decoration: BoxDecoration(
                                                        color: AppColors.darkBlue.withValues(alpha: 0.6),
                                                      ),
                                                      child: AppWidgets.searchTextFeild(
                                                        onChanged: (value) {
                                                          dayWorkController.searchProductValue.value = value;
                                                        },
                                                        onTap: () {
                                                          dayWorkController.showSearchProduct.value = true;
                                                          dayWorkController.rootCatShow.value = false;
                                                          dayWorkController.subCatShow.value = false;
                                                          dayWorkController.productShow.value = false;
                                                          dayWorkController.rootCatName = '';
                                                          dayWorkController.subCatName = '';
                                                          dayWorkController.selectIndex.value = -1;
                                                          dayWorkController.subCategoryList.clear();
                                                          dayWorkController.listChange.value = Random().nextInt(9999999);
                                                        },
                                                        controller: dayWorkController.searchFieldController,
                                                        suffixIcon: Visibility(
                                                          visible: dayWorkController.showSearchProduct.value,
                                                          child: Padding(
                                                            padding: const EdgeInsets.all(8.0),
                                                            child: CircleAvatar(
                                                              backgroundColor: AppColors.red,
                                                              child: IconButton(
                                                                onPressed: () {
                                                                  dayWorkController.searchProductValue.value = '';
                                                                  dayWorkController.searchFieldController.clear();
                                                                  dayWorkController.rootCatShow.value = true;
                                                                  dayWorkController.subCatShow.value = false;
                                                                  dayWorkController.productShow.value = false;
                                                                  dayWorkController.showSearchProduct.value = false;
                                                                  dayWorkController.rootCatName = '';
                                                                  dayWorkController.subCatName = '';
                                                                  dayWorkController.selectIndex.value = -1;
                                                                  dayWorkController.subCategoryList.clear();
                                                                  FocusScope.of(context).unfocus();
                                                                  dayWorkController.listChange.value = Random().nextInt(9999999);
                                                                },
                                                                icon: const Icon(Icons.close, color: AppColors.white),
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                    if (dayWorkController.rootCatName.isNotEmpty)
                                                      Padding(
                                                        padding: const EdgeInsets.symmetric(
                                                          vertical: 5.0,
                                                          horizontal: 20,
                                                        ),
                                                        child: SingleChildScrollView(
                                                          scrollDirection: Axis.horizontal,
                                                          child: SizedBox(
                                                            width: Get.width,
                                                            child: Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              children: [
                                                                InkWell(
                                                                  onTap: () {
                                                                    dayWorkController.rootCatShow.value = true;
                                                                    dayWorkController.subCatShow.value = false;
                                                                    dayWorkController.productShow.value = false;
                                                                    dayWorkController.rootCatName = '';
                                                                    dayWorkController.subCatName = '';
                                                                    dayWorkController.subCategoryList.clear();
                                                                    FocusScope.of(context).unfocus();
                                                                    dayWorkController.searchFieldController.clear();
                                                                    dayWorkController.searchProductValue.value = '';
                                                                    dayWorkController.listChange.value = Random().nextInt(9999999);
                                                                  },
                                                                  child: AppWidgets.customText(
                                                                    text: dayWorkController.rootCatName,
                                                                    style: AppFonts.lightBlueColor14,
                                                                  ),
                                                                ),
                                                                const Padding(
                                                                  padding: EdgeInsets.symmetric(
                                                                    horizontal: 3.0,
                                                                  ),
                                                                  child: Icon(
                                                                    Icons.arrow_forward_ios,
                                                                    size: 18,
                                                                    color: AppColors.lightBlue,
                                                                  ),
                                                                ),
                                                                if (dayWorkController.subCatName.isNotEmpty)
                                                                  InkWell(
                                                                    onTap: () {
                                                                      dayWorkController.rootCatShow.value = false;
                                                                      dayWorkController.subCatShow.value = true;
                                                                      dayWorkController.productShow.value = false;
                                                                      dayWorkController.subCatName = '';
                                                                      dayWorkController.productList.clear();
                                                                      FocusScope.of(context).unfocus();
                                                                      dayWorkController.searchFieldController.clear();
                                                                      dayWorkController.searchProductValue.value = '';
                                                                      dayWorkController.listChange.value = Random().nextInt(9999999);
                                                                    },
                                                                    child: AppWidgets.customText(
                                                                      text: dayWorkController.subCatName,
                                                                      style: AppFonts.lightBlueColor14,
                                                                    ),
                                                                  ),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    if (dayWorkController.rootCatShow.value)
                                                      Expanded(
                                                        child: Padding(
                                                          padding: const EdgeInsets.all(8.0),
                                                          child: ValueListenableBuilder(
                                                            valueListenable: dayWorkController.searchProductValue,
                                                            builder: (context, String value, child) {
                                                              return DynamicHeightGridView(
                                                                crossAxisCount: 3,
                                                                crossAxisSpacing: 5,
                                                                mainAxisSpacing: 5,
                                                                itemCount: storeReturnController.selectedDelivery?.data?.materials?.rootCategories?.where((category) => value.isEmpty || (category.categoryName?.toLowerCase().contains(value.toLowerCase()) ?? false)).length ?? 0,
                                                                builder: (context, index) {
                                                                  var filteredCategories = storeReturnController.selectedDelivery?.data?.materials?.rootCategories?.where((category) => value.isEmpty || (category.categoryName?.toLowerCase().contains(value.toLowerCase()) ?? false)).toList();
                                                                  var category = filteredCategories?[index];

                                                                  return AppWidgets.gridView(
                                                                    onTap: () {
                                                                      dayWorkController.rootCatName = '${category?.categoryName}';
                                                                      dayWorkController.rootCatShow.value = false;
                                                                      dayWorkController.subCatShow.value = true;
                                                                      dayWorkController.productShow.value = false;
                                                                      FocusScope.of(context).unfocus();
                                                                      dayWorkController.searchFieldController.clear();
                                                                      dayWorkController.searchProductValue.value = '';
                                                                      var selectedRootId = category?.categoryId;
                                                                      dayWorkController.mSubProductList.clear();
                                                                      for (var product in storeReturnController.selectedDelivery?.data?.materials?.subCategories ?? []) {
                                                                        if (product.parentId == selectedRootId) {
                                                                          dayWorkController.mSubProductList.add(product);
                                                                        }
                                                                      }
                                                                      dayWorkController.listChange.value = Random().nextInt(9999999);
                                                                    },
                                                                    color: AppColors.lightBlue,
                                                                    title: '${category?.categoryName}',
                                                                  );
                                                                },
                                                              );
                                                            },
                                                          ),
                                                        ),
                                                      ),
                                                    if (dayWorkController.subCatShow.value)
                                                      Expanded(
                                                        child: Padding(
                                                          padding: const EdgeInsets.all(8.0),
                                                          child: ValueListenableBuilder(
                                                              valueListenable: dayWorkController.searchProductValue,
                                                              builder: (context, String value, child) {
                                                                return DynamicHeightGridView(
                                                                  crossAxisCount: 3,
                                                                  crossAxisSpacing: 5,
                                                                  mainAxisSpacing: 5,
                                                                  itemCount: dayWorkController.mSubProductList.where((element) => value.isEmpty || element.categoryName!.toLowerCase().contains(value.toLowerCase())).length,
                                                                  builder: (context, index) {
                                                                    var filteredCategories = dayWorkController.mSubProductList.where((element) => value.isEmpty || element.categoryName!.toLowerCase().contains(value.toLowerCase())).toList();
                                                                    var category = filteredCategories[index];

                                                                    return AppWidgets.gridView(
                                                                      onTap: () {
                                                                        dayWorkController.subCatName = '${category.categoryName}';
                                                                        dayWorkController.rootCatShow.value = false;
                                                                        dayWorkController.subCatShow.value = false;
                                                                        dayWorkController.productShow.value = true;
                                                                        var selectedRootId = category.categoryId;
                                                                        FocusScope.of(context).unfocus();
                                                                        dayWorkController.searchFieldController.clear();
                                                                        dayWorkController.searchProductValue.value = '';
                                                                        dayWorkController.mProductList.clear();
                                                                        for (var product in storeReturnController.selectedDelivery?.data?.materials?.products ?? []) {
                                                                          if (product.categoryId == selectedRootId) {
                                                                            dayWorkController.mProductList.add(product);
                                                                          }
                                                                        }
                                                                        dayWorkController.listChange.value = Random().nextInt(9999999);
                                                                      },
                                                                      color: AppColors.lightBlue,
                                                                      title: '${category.categoryName}',
                                                                    );
                                                                  },
                                                                );
                                                              }),
                                                        ),
                                                      ),
                                                    if (dayWorkController.productShow.value)
                                                      Expanded(
                                                        child: Padding(
                                                          padding: const EdgeInsets.all(8.0),
                                                          child: Padding(
                                                            padding: const EdgeInsets.all(8.0),
                                                            child: ValueListenableBuilder(
                                                              valueListenable: dayWorkController.searchProductValue,
                                                              builder: (context, String value, child) {
                                                                return DynamicHeightGridView(
                                                                  itemCount: dayWorkController.mProductList.where((element) => value.isEmpty || element.itemName!.toLowerCase().contains(value.toLowerCase())).length,
                                                                  crossAxisCount: 3,
                                                                  crossAxisSpacing: 5,
                                                                  mainAxisSpacing: 5,
                                                                  builder: (BuildContext context, int index) {
                                                                    var filteredCategories = dayWorkController.mProductList.where((element) => value.isEmpty || element.itemName!.toLowerCase().contains(value.toLowerCase())).toList();
                                                                    var category = filteredCategories[index];
                                                                    return Obx(
                                                                      () {
                                                                        return AppWidgets.gridView(
                                                                          onTap: () {
                                                                            dayWorkController.selectIndex.value = index;
                                                                            dayWorkController.plantName.value = '${category.itemName}';
                                                                          },
                                                                          color: dayWorkController.selectIndex.value == index ? AppColors.green : AppColors.lightBlue,
                                                                          title: '${category.itemName}',
                                                                        );
                                                                      },
                                                                    );
                                                                  },
                                                                );
                                                              },
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    if (dayWorkController.showSearchProduct.value)
                                                      Builder(
                                                        builder: (context) {
                                                          dayWorkController.mProductList.clear();
                                                          for (var product in storeReturnController.selectedDelivery?.data?.materials?.products ?? []) {
                                                            dayWorkController.mProductList.add(product);
                                                          }

                                                          return Expanded(
                                                            child: Padding(
                                                              padding: const EdgeInsets.all(8.0),
                                                              child: ValueListenableBuilder(
                                                                valueListenable: dayWorkController.searchProductValue,
                                                                builder: (context, String value, child) {
                                                                  var filteredCategories = dayWorkController.mProductList.where((element) => value.isEmpty || element.itemName!.toLowerCase().contains(value.toLowerCase())).toList();
                                                                  if (filteredCategories.isEmpty) {
                                                                    return const Center(
                                                                      child: Text('No data found'),
                                                                    );
                                                                  }
                                                                  return DynamicHeightGridView(
                                                                    crossAxisCount: 3,
                                                                    crossAxisSpacing: 5,
                                                                    mainAxisSpacing: 5,
                                                                    itemCount: filteredCategories.length,
                                                                    builder: (context, index) {
                                                                      var category = filteredCategories[index];
                                                                      return Obx(() {
                                                                        return AppWidgets.gridView(
                                                                          onTap: () {
                                                                            dayWorkController.selectIndex.value = index;
                                                                            dayWorkController.plantName.value = '${category.itemName}';
                                                                          },
                                                                          color: dayWorkController.selectIndex.value == index ? AppColors.green : AppColors.lightBlue,
                                                                          title: '${category.itemName}',
                                                                        );
                                                                      });
                                                                    },
                                                                  );
                                                                },
                                                              ),
                                                            ),
                                                          );
                                                        },
                                                      ),
                                                    Obx(
                                                      () {
                                                        return AppWidgets.incDec(
                                                          onDec: () {
                                                            deliveryController.decrement();
                                                          },
                                                          onInc: () {
                                                            deliveryController.increment();
                                                          },
                                                          value: "${deliveryController.counter.value}",
                                                        );
                                                      },
                                                    ),
                                                    AppWidgets.unitDis(
                                                      ctr: deliveryController.unitPriceController,
                                                      onSubmitted1: (value) {
                                                        deliveryController.unitPriceController.text = value;
                                                        deliveryController.calculatePrices();
                                                      },
                                                    ),
                                                    Obx(() => Text(
                                                          'Total Price: ${deliveryController.totalPrice.value.toStringAsFixed(2)}',
                                                          style: const TextStyle(fontSize: 20),
                                                        )),
                                                    AppWidgets.addRemoveButton(
                                                      removeText: 'Cancel',
                                                      onAdd: () {
                                                        int selectedIndex = dayWorkController.selectIndex.value;

                                                        if (selectedIndex >= 0 && selectedIndex < dayWorkController.mProductList.length) {
                                                          if (selectedIndex < dayWorkController.mSubProductList.length) {}
                                                          if (dayWorkController.materialProduct.where((element) => element.items == dayWorkController.mProductList[selectedIndex].itemName).isNotEmpty) {
                                                            AppWidgets.toast(msg: 'Product already added', backgroundColor: AppColors.red);
                                                          } else {
                                                            dayWorkController.materialProduct.add(
                                                              PurchaseProductModel(
                                                                qty: deliveryController.counter.value.toString() == '' ? '1' : deliveryController.counter.value.toString(),
                                                                items: dayWorkController.plantName.value,
                                                                itemID: dayWorkController.mProductList[selectedIndex].id ?? "",
                                                                itemPrice: deliveryController.unitPriceController.text == '' ? '0.0' : deliveryController.unitPriceController.text,
                                                                itemTotalPrice: deliveryController.totalPrice.value.toString() == '' ? '0.0' : deliveryController.totalPrice.value.toString(),
                                                                emsCode: dayWorkController.mProductList[selectedIndex].emsCode ?? "",
                                                                itemName: dayWorkController.mProductList[selectedIndex].itemName,
                                                                productId: dayWorkController.mProductList[selectedIndex].id ?? "",
                                                                partNO: dayWorkController.mProductList[selectedIndex].serialNumber ?? "",
                                                                rootName: "",
                                                              ),
                                                            );
                                                          }

                                                          deliveryController.calculateTotals(
                                                            dayWorkController.plantProduct,
                                                            dayWorkController.materialProduct,
                                                            dayWorkController.accessProduct,
                                                          );

                                                          dayWorkController.rootCatShow.value = true;
                                                          dayWorkController.subCatShow.value = false;
                                                          dayWorkController.productShow.value = false;
                                                          dayWorkController.rootCatName = '';
                                                          dayWorkController.subCatName = '';
                                                          dayWorkController.selectIndex.value = -1;
                                                          dayWorkController.listChange.value = Random().nextInt(9999999);
                                                          deliveryController.counter.value = 0;
                                                          deliveryController.unitPriceController.text = '0.0';
                                                          deliveryController.isVisible2.value = true;
                                                          dayWorkController.listChange.value = Random().nextInt(9999999);
                                                          Get.back();
                                                        } else {}
                                                      },
                                                      onRemove: () {
                                                        dayWorkController.rootCatShow.value = true;
                                                        dayWorkController.subCatShow.value = false;
                                                        dayWorkController.productShow.value = false;
                                                        dayWorkController.rootCatName = '';
                                                        dayWorkController.subCatName = '';
                                                        dayWorkController.selectIndex.value = -1;
                                                        dayWorkController.subCategoryList.clear();
                                                        dayWorkController.listChange.value = Random().nextInt(9999999);
                                                        deliveryController.totalPrice.value = 0.0;
                                                        deliveryController.counter.value = 0;
                                                        deliveryController.unitPrice.value = 0.0;
                                                        deliveryController.unitPriceController.text = '0.0';
                                                        Get.back();
                                                      },
                                                    ),
                                                  ],
                                                );
                                              }),
                                            ),
                                          ),
                                        ),
                                      );
                                    },
                                  );
                                },
                              );
                            },
                            child: Container(
                              width: Get.width,
                              decoration: const BoxDecoration(
                                color: AppColors.lightBlue,
                              ),
                              padding: const EdgeInsets.all(10),
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                children: [
                                  Text("C : ADD MATERIALS", style: AppFonts.white16),
                                  Row(
                                    children: [
                                      Text("ADD", style: AppFonts.white18),
                                      const SizedBox(
                                        width: 5,
                                      ),
                                      const Icon(Icons.add, color: AppColors.white)
                                    ],
                                  )
                                ],
                              ),
                            ),
                          ),
                        ),
                        ValueListenableBuilder(
                          valueListenable: dayWorkController.listChange,
                          builder: (context, value, child) {
                            return Visibility(
                              visible: deliveryController.isVisible2.value,
                              child: ListView.builder(
                                shrinkWrap: true,
                                physics: const NeverScrollableScrollPhysics(),
                                padding: EdgeInsets.zero,
                                itemCount: dayWorkController.materialProduct.length,
                                itemBuilder: (context, index) {
                                  return Padding(
                                    padding: const EdgeInsets.all(8.0),
                                    child: GestureDetector(
                                      onTap: () {
                                        deliveryController.counter.value = int.parse(dayWorkController.materialProduct[index].qty);
                                        deliveryController.unitPrice.value = double.parse(dayWorkController.materialProduct[index].itemPrice);
                                        deliveryController.totalPrice.value = deliveryController.unitPrice.value * deliveryController.counter.value;
                                        deliveryController.unitPriceController.text = deliveryController.unitPrice.value.toString();
                                        showDialog(
                                          context: context,
                                          builder: (context) {
                                            return BackdropFilter(
                                              filter: ImageFilter.blur(sigmaX: 5, sigmaY: 5),
                                              child: AlertDialog(
                                                shape: RoundedRectangleBorder(
                                                  borderRadius: BorderRadius.circular(0),
                                                ),
                                                title: const Center(
                                                  child: Text(
                                                    "Update Quantity",
                                                    style: TextStyle(color: AppColors.lightBlue, fontSize: 20),
                                                  ),
                                                ),
                                                content: Obx(() {
                                                  return Column(
                                                    mainAxisSize: MainAxisSize.min,
                                                    children: [
                                                      AppWidgets.incDec(
                                                        onDec: () {
                                                          deliveryController.decrement();
                                                          deliveryController.calculatePrices();
                                                        },
                                                        onInc: () {
                                                          deliveryController.increment();
                                                          deliveryController.calculatePrices();
                                                        },
                                                        value: "${deliveryController.counter.value}",
                                                      ),
                                                      const SizedBox(height: 10),
                                                      TextFormField(
                                                        controller: deliveryController.unitPriceController,
                                                        keyboardType: const TextInputType.numberWithOptions(decimal: true),
                                                        decoration: const InputDecoration(
                                                          labelText: 'Unit Price',
                                                          border: OutlineInputBorder(),
                                                        ),
                                                        onChanged: (value) {
                                                          if (value.isEmpty) {
                                                            // deliveryController.textEditingController1.text = '0.0';
                                                          } else {
                                                            deliveryController.calculatePrices();
                                                          }
                                                        },
                                                      ),
                                                      const SizedBox(height: 10),
                                                      Text(
                                                        'Total Price: ${deliveryController.totalPrice.value.toStringAsFixed(2)}',
                                                        style: const TextStyle(fontSize: 16),
                                                      ),
                                                    ],
                                                  );
                                                }),
                                                actions: [
                                                  AppWidgets.addRemoveButton(
                                                    onAdd: () {
                                                      // Update the product data without using setState
                                                      dayWorkController.materialProduct[index] = PurchaseProductModel(
                                                        items: dayWorkController.materialProduct[index].items,
                                                        qty: deliveryController.counter.value.toString(),
                                                        itemID: dayWorkController.materialProduct[index].itemID,
                                                        itemPrice: deliveryController.unitPriceController.text,
                                                        itemTotalPrice: deliveryController.totalPrice.value.toString(),
                                                        productId: dayWorkController.materialProduct[index].productId,
                                                        emsCode: dayWorkController.materialProduct[index].emsCode,
                                                        itemName: dayWorkController.materialProduct[index].itemName,
                                                        partNO: dayWorkController.materialProduct[index].partNO ?? "",
                                                        rootName: dayWorkController.materialProduct[index].rootName,
                                                      );

                                                      // Recalculate totals
                                                      deliveryController.calculateTotals(dayWorkController.plantProduct, dayWorkController.materialProduct, dayWorkController.accessProduct);

                                                      // Notify changes through listChange
                                                      dayWorkController.listChange.value = Random().nextInt(9999999);

                                                      // Close the dialog
                                                      Navigator.pop(context);
                                                    },
                                                    onRemove: () {
                                                      // Remove the product and recalculate totals
                                                      dayWorkController.materialProduct.removeAt(index);
                                                      deliveryController.calculateTotals(dayWorkController.plantProduct, dayWorkController.materialProduct, dayWorkController.accessProduct);

                                                      // Notify changes through listChange
                                                      dayWorkController.listChange.value = Random().nextInt(9999999);

                                                      // Close the dialog
                                                      Get.back();
                                                    },
                                                  ),
                                                ],
                                              ),
                                            );
                                          },
                                        );
                                      },
                                      child: Container(
                                        width: Get.width,
                                        decoration: const BoxDecoration(
                                          color: AppColors.white,
                                        ),
                                        child: ListTile(
                                          contentPadding: const EdgeInsets.symmetric(horizontal: 3),
                                          leading: Container(
                                            height: Get.height * 0.055,
                                            width: Get.width * 0.09,
                                            decoration: BoxDecoration(
                                              color: AppColors.lightBlue,
                                              border: Border.all(color: AppColors.lightBlue),
                                            ),
                                            child: Column(
                                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                                              children: [
                                                Text(
                                                  "Qty",
                                                  style: AppFonts.white18,
                                                ),
                                                Text(
                                                  dayWorkController.materialProduct[index].qty.toString(),
                                                  style: AppFonts.white16.copyWith(letterSpacing: 0),
                                                ),
                                              ],
                                            ),
                                          ),
                                          title: Column(
                                            crossAxisAlignment: CrossAxisAlignment.start,
                                            children: [
                                              // Text(
                                              //   materialProduct[index].rootName??"",
                                              //   style: AppFonts.lightBlueColor12.copyWith(fontWeight: FontWeight.bold),
                                              // ),
                                              Text(
                                                dayWorkController.materialProduct[index].items,
                                                style: AppFonts.lightBlueColor12.copyWith(fontWeight: FontWeight.bold),
                                              ),
                                              Padding(
                                                padding: const EdgeInsets.only(right: 8.0),
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  children: [
                                                    Text(
                                                      "Unit Price: ${dayWorkController.materialProduct[index].itemPrice}",
                                                      style: AppFonts.black12,
                                                    ),
                                                    Text(
                                                      "Total Price: ${dayWorkController.materialProduct[index].itemTotalPrice}",
                                                      style: AppFonts.black12,
                                                    ),
                                                  ],
                                                ),
                                              ),
                                            ],
                                          ),
                                        ),
                                      ),
                                    ),
                                  );
                                },
                              ),
                            );
                          },
                        ),
                        ValueListenableBuilder(
                            valueListenable: dayWorkController.listChange,
                            builder: (context, value, child) {
                              return Padding(
                                padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                child: InkWell(
                                  onTap: () async {
                                    showDialog(
                                      context: context,
                                      builder: (context) {
                                        return AlertDialog(
                                          title: const Text("Select Image Source"),
                                          content: Column(
                                            mainAxisSize: MainAxisSize.min,
                                            children: [
                                              ListTile(
                                                title: const Text("Camera"),
                                                onTap: () {
                                                  dayWorkController.pickImages(false);
                                                  dayWorkController.listChange.value = Random().nextInt(9999999);
                                                  Get.back();
                                                },
                                              ),
                                              ListTile(
                                                title: const Text("Gallery"),
                                                onTap: () {
                                                  dayWorkController.pickImages(true);
                                                  dayWorkController.listChange.value = Random().nextInt(9999999);
                                                  Get.back();
                                                },
                                              ),
                                            ],
                                          ),
                                        );
                                      },
                                    );
                                  },
                                  child: Container(
                                    width: Get.width,
                                    decoration: const BoxDecoration(
                                      color: AppColors.lightBlue,
                                    ),
                                    padding: const EdgeInsets.all(10),
                                    child: Row(
                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                      children: [
                                        Text("D : UPLOAD IMAGES", style: AppFonts.white16),
                                        Row(
                                          children: [
                                            Text("ADD", style: AppFonts.white18),
                                            const SizedBox(width: 5),
                                            const Icon(Icons.add, color: AppColors.white),
                                          ],
                                        )
                                      ],
                                    ),
                                  ),
                                ),
                              );
                            }),
                        if (dayWorkController.selectedImages.isNotEmpty)
                          SizedBox(
                            height: 120,
                            child: ValueListenableBuilder(
                              valueListenable: dayWorkController.listChange,
                              builder: (context, value, child) {
                                return ListView.builder(
                                  shrinkWrap: true,
                                  scrollDirection: Axis.horizontal,
                                  itemCount: dayWorkController.selectedImages.length,
                                  itemBuilder: (context, index) {
                                    return Padding(
                                      padding: const EdgeInsets.all(8.0),
                                      child: InkWell(
                                        onTap: () {
                                          showDialog(
                                            context: context,
                                            builder: (context) {
                                              return Dialog(
                                                child: SizedBox(
                                                  height: Get.height * 0.6,
                                                  width: Get.width * 0.9,
                                                  child: Image.file(
                                                    File(dayWorkController.selectedImages[index].path),
                                                    fit: BoxFit.cover,
                                                  ),
                                                ),
                                              );
                                            },
                                          );
                                        },
                                        child: Stack(
                                          children: [
                                            SizedBox(
                                              height: 100,
                                              width: 70,
                                              child: Image.file(
                                                File(dayWorkController.selectedImages[index].path),
                                                fit: BoxFit.cover,
                                              ),
                                            ),
                                            Positioned(
                                              top: 0,
                                              right: 0,
                                              child: InkWell(
                                                onTap: () {
                                                  setState(() {
                                                    dayWorkController.selectedImages.removeAt(index);
                                                  });
                                                },
                                                child: const CircleAvatar(
                                                  backgroundColor: AppColors.red,
                                                  radius: 12,
                                                  child: Icon(Icons.close, color: AppColors.white, size: 20),
                                                ),
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    );
                                  },
                                );
                              },
                            ),
                          ),
                        AppWidgets.commonUI(
                          title: 'Extra Information',
                          widget: Container(
                            decoration: const BoxDecoration(
                              color: AppColors.lightBlue,
                            ),
                            child: AppWidgets.quoteFieldsC(maxLine: 5, textEditingController: dayWorkController.extraInfoController),
                          ),
                          isShowWidget: true,
                        ),
                        Obx(() {
                          return Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                Text(
                                  "Grand Total",
                                  style: AppFonts.white18.copyWith(
                                    fontWeight: FontWeight.bold,
                                    letterSpacing: 0,
                                  ),
                                ),
                                Container(
                                  height: 30,
                                  width: 100,
                                  decoration: BoxDecoration(
                                    color: AppColors.white,
                                    borderRadius: BorderRadius.circular(10),
                                  ),
                                  child: Center(
                                    child: Text(
                                      "£${deliveryController.subtotal.value.toStringAsFixed(2)}",
                                      style: AppFonts.lightBlueColor18.copyWith(
                                        fontWeight: FontWeight.bold,
                                        letterSpacing: 0,
                                      ),
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          );
                        }),
                      ],
                    ),
                  ),
                ],
              ),
            ],
          );
        }),
        bottomNavigationBar: SizedBox(
          height: 8.h,
          width: Get.width,
          child: ElevatedButton(
            style: ElevatedButton.styleFrom(
              backgroundColor: AppColors.green,
              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(0)),
            ),
            onPressed: () async {
              if (dayWorkController.siteAddress.value == "") {
                AppUtils().playAudio(audioPlayer: AppWidgets.audioPlayer, audio: AppMusic.errorSound, isVibrate: true);
                AppWidgets.toast(msg: "Please select site address", backgroundColor: AppColors.red);
                return;
              }
              if (dayWorkController.selectedDate2.value == "--") {
                AppUtils().playAudio(audioPlayer: AppWidgets.audioPlayer, audio: AppMusic.errorSound, isVibrate: true);
                AppWidgets.toast(msg: "Please select date", backgroundColor: AppColors.red);
                return;
              }

              if (dayWorkController.descController.text.isEmpty) {
                AppUtils().playAudio(audioPlayer: AppWidgets.audioPlayer, audio: AppMusic.errorSound, isVibrate: true);
                AppWidgets.toast(msg: "Please enter description", backgroundColor: AppColors.red);
                return;
              }
              Map<String, dynamic> data = {};

              data.addAll({
                "JOB_ID": dayWorkController.siteAddress.value,
                "SCHEDULE": DateFormat("yyyy-MM-dd").format(dayWorkController.selectedDate),
                "DAYWORK_DESCRIPTION": dayWorkController.descController.text,
                "EXTERA_INFO": dayWorkController.extraInfoController.text,
                "SITE_ADDRESS": dayWorkController.selectedProject.value,
                "CREATED_BY": getAllUserController.selectId.value,
              });

              if (widget.isEdit == true) {
                data.addAll({
                  "DAYWORK_ID": widget.id,
                });
              }

              for (int i = 0; i < dayWorkController.weekHoursAndName.length; i++) {
                if (dayWorkController.weekHoursAndName[i].id != "0") {
                  data.addAll({
                    "LABOUR_PERSON[$i]": dayWorkController.weekHoursAndName[i].id,
                    "MON[$i]": dayWorkController.weekHoursAndName[i].mon,
                    "TUE[$i]": dayWorkController.weekHoursAndName[i].tue,
                    "WED[$i]": dayWorkController.weekHoursAndName[i].wed,
                    "THU[$i]": dayWorkController.weekHoursAndName[i].thu,
                    "FRI[$i]": dayWorkController.weekHoursAndName[i].fri,
                    "SAT[$i]": dayWorkController.weekHoursAndName[i].sat,
                    "SUN[$i]": dayWorkController.weekHoursAndName[i].sun,
                    "TOTAL_HOURS[$i]": dayWorkController.weekHoursAndName[i].total,
                  });
                } else {
                  data.addAll({
                    "LABOUR_PERSON[$i]": dayWorkController.weekHoursAndName[i].id,
                    "OTHER_LABOUR[$i]": dayWorkController.weekHoursAndName[i].other,
                    "MON[$i]": dayWorkController.weekHoursAndName[i].mon,
                    "TUE[$i]": dayWorkController.weekHoursAndName[i].tue,
                    "WED[$i]": dayWorkController.weekHoursAndName[i].wed,
                    "THU[$i]": dayWorkController.weekHoursAndName[i].thu,
                    "FRI[$i]": dayWorkController.weekHoursAndName[i].fri,
                    "SAT[$i]": dayWorkController.weekHoursAndName[i].sat,
                    "SUN[$i]": dayWorkController.weekHoursAndName[i].sun,
                    "TOTAL_HOURS[$i]": dayWorkController.weekHoursAndName[i].total,
                  });
                }
              }
              for (int i = 0; i < dayWorkController.plantProduct.length; i++) {
                data.addAll({
                  "PLANT_NAME[$i]": dayWorkController.plantProduct[i].itemID,
                  "PLANT_QTY[$i]": dayWorkController.plantProduct[i].qty,
                  "PLANT_PRICE[$i]": dayWorkController.plantProduct[i].itemPrice,
                });
              }
              for (int i = 0; i < dayWorkController.materialProduct.length; i++) {
                data.addAll({
                  "MATERIAL_NAME[$i]": dayWorkController.materialProduct[i].itemID,
                  "ITEM_UNIT[$i]": dayWorkController.materialProduct[i].qty,
                  "PRICE[$i]": dayWorkController.materialProduct[i].itemPrice,
                });
              }

              await dayWorkController.addEditDayWorks(data: data);
            },
            child: AppWidgets.snText(
              text: widget.isEdit == true ? "Update Day Work" : "Add Day Work",
              style: AppFonts.white14.copyWith(fontWeight: FontWeight.bold, fontSize: 16.sp),
            ),
          ),
        ),
      ),
    );
  }
}
